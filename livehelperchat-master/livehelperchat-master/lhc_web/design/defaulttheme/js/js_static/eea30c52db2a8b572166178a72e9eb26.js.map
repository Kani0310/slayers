{"version":3,"sources":["eea30c52db2a8b572166178a72e9eb26.js"],"names":["lhcAppControllers","controller","$scope","$http","$location","$rootScope","$log","this","conditions","itemAdd","conditions_json","that","makeid","length","text","possible","i","charAt","Math","floor","random","addItem","type","push","_id","logic","deleteCondition","condition","confirm","splice","indexOf","move","element","list","offset","index","newIndex","removedElement","moveUp","field","moveDown","updateContinuous","JSON","stringify"],"mappings":"AAAAA,kBAAkBC,WAAW,eAAe,CAAC,SAAS,QAAQ,YAAY,aAAc,OAAQ,SAASC,EAAQC,EAAOC,EAAWC,EAAYC,GAC/IC,KAAKC,WAAa,GAClBD,KAAKE,QAAU,IACfF,KAAKG,gBAAkB,GACvB,IAAIC,EAAOJ,KACXA,KAAKK,OAAS,SAASC,GAGvB,IAFA,IAAIC,EAAO,GACPC,EAAW,iEACNC,EAAI,EAAGA,EAAIH,EAAQG,IAC5BF,GAAQC,EAASE,OAAOC,KAAKC,MAAMD,KAAKE,SAAWL,EAASF,SAC5D,OAAOC,GAEPP,KAAKc,QAAU,SAASC,GACxBf,KAAKC,WAAWe,KAAK,CACrBC,IAAOjB,KAAKK,OAAO,IACnBU,KAAQA,EACRG,MAAS,SAGTlB,KAAKmB,gBAAkB,SAAUC,GAC7BC,QAAQ,kBACZrB,KAAKC,WAAWqB,OAAOtB,KAAKC,WAAWsB,QAAQH,GAAY,IAG3DpB,KAAKwB,KAAO,SAASC,EAASC,EAAMC,GACpCC,MAAQF,EAAKH,QAAQE,GACrBI,SAAWD,MAAQD,EACfE,UAAY,GAAKA,SAAWH,EAAKpB,SACrCwB,eAAiBJ,EAAKJ,OAAOM,MAAO,GAAG,GACvCF,EAAKJ,OAAOO,SAAU,EAAGC,kBAGzB9B,KAAK+B,OAAS,SAASC,EAAMN,GAC7BtB,EAAKoB,KAAKQ,EAAMN,GAAM,IAEtB1B,KAAKiC,SAAW,SAASD,EAAMN,GAC/BtB,EAAKoB,KAAKQ,EAAMN,EAAK,IAErB1B,KAAKkC,iBAAmB,WACxBlC,KAAKG,gBAAkBgC,KAAKC,UAAUpC,KAAKC","file":"eea30c52db2a8b572166178a72e9eb26.js","sourcesContent":["lhcAppControllers.controller('WebhooksCtrl',['$scope','$http','$location','$rootScope', '$log', function($scope, $http, $location, $rootScope, $log) {\nthis.conditions = [];\nthis.itemAdd = \"1\";\nthis.conditions_json = \"\";\nvar that = this;\nthis.makeid = function(length) {\nvar text = \"\";\nvar possible = \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789\";\nfor (var i = 0; i < length; i++)\ntext += possible.charAt(Math.floor(Math.random() * possible.length));\nreturn text;\n}\nthis.addItem = function(type) {\nthis.conditions.push({\n'_id': this.makeid(10),\n'type': type,\n'logic': 'and'\n});\n}\nthis.deleteCondition = function (condition) {\nif (confirm('Are you sure?')){\nthis.conditions.splice(this.conditions.indexOf(condition), 1);\n}\n}\nthis.move = function(element, list, offset) {\nindex = list.indexOf(element);\nnewIndex = index + offset;\nif (newIndex > -1 && newIndex < list.length){\nremovedElement = list.splice(index, 1)[0];\nlist.splice(newIndex, 0, removedElement)\n}\n};\nthis.moveUp = function(field,list) {\nthat.move(field,list,-1);\n}\nthis.moveDown = function(field,list) {\nthat.move(field,list,1);\n}\nthis.updateContinuous = function() {\nthis.conditions_json = JSON.stringify(this.conditions)\n}\n}]);\n"]}