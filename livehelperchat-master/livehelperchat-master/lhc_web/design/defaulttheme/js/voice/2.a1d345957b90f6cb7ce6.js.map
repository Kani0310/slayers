{"version":3,"sources":["webpack://LHCVoiceCallAPP/./src/lib/useInterval.js","webpack://LHCVoiceCallAPP/./src/components/parts/VideoStream.js","webpack://LHCVoiceCallAPP/./src/components/parts/MediaStream.js","webpack://LHCVoiceCallAPP/./src/components/VoiceCall.js"],"names":["useInterval","callback","delay","savedCallback","useRef","useEffect","current","id","setInterval","clearInterval","VideoStream","props","useState","isFullScreen","setFullScreen","user","videoTrack","play","uid","className","title","onClick","e","MediaStream","useTranslation","t","i18n","video","key","client","AgoraRTC","createClient","mode","codec","reducer","state","action","type","value","remoteUsers","obj","media","audio","push","Error","VoiceCall","useReducer","call","localTracks","audioTrack","hasAudio","hasVideo","screenShare","inCall","pendingJoin","isMuted","dispatch","chatsRef","updateUI","getDevices","then","devices","audioDevices","filter","device","kind","videoDevices","length","requestJoin","url","isVisitor","WWW_DIR_JAVASCRIPT","initParams","hash","axios","post","result","data","cancelJoin","a","get","Object","keys","forEach","trackName","track","stop","close","undefined","leave","muteMicrophone","setEnabled","status","vi_status","op_status","subscribe","mediaType","handleUserPublished","handleUserLeft","handleUserUnpublished","join","unpublish","addCamera","createScreenVideoTrack","screenTrack","publish","alert","createCameraVideoTrack","tokenWillExpire","renewToken","token","on","appid","uui","createMicrophoneAudioTrack","values","Fragment","map","val","k","role","options","disabled","screenshare"],"mappings":"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","file":"2.a1d345957b90f6cb7ce6.js","sourcesContent":["import { useEffect, useRef } from \"react\";\n\nfunction useInterval(callback, delay) {\n    const savedCallback = useRef();\n\n    // Remember the latest callback.\n    useEffect(() => {\n        savedCallback.current = callback;\n    }, [callback]);\n\n    // Set up the interval.\n    useEffect(() => {\n        function tick() {\n            savedCallback.current();\n        }\n        if (delay !== null) {\n            let id = setInterval(tick, delay);\n            return () => clearInterval(id);\n        }\n    }, [delay]);\n}\n\nexport default useInterval;","import React, { useEffect, useState } from \"react\";\n\nconst VideoStream = props => {\n\n    const [isFullScreen, setFullScreen] = useState(false);\n    \n    useEffect(() => {\n        props.user.videoTrack.play('player-'+props.user.uid);\n    },[]);\n    \n    return <div className={(isFullScreen ? \"col-12\" : \"col\")+\" bg-light m-0 align-middle text-center d-flex p-0\"} id={\"player-\"+props.user.uid} title={\"UID \"+props.user.uid}>\n        <div className=\"full-screen-icon\" onClick={(e) => setFullScreen(!isFullScreen)}>\n            <span className=\"material-icons\">{isFullScreen ? 'fullscreen_exit' : 'fullscreen'}</span>\n        </div>\n    </div>\n}\n\nexport default VideoStream;","import React, { useEffect } from \"react\";\nimport VideoStream from \"./VideoStream\";\n\nimport {useTranslation} from 'react-i18next';\n\nconst MediaStream = props => {\n\n    const { t, i18n } = useTranslation('voice_call');\n\n    if (props.video == true) {\n        return <VideoStream user={props.user} key={\"video-stream-\"+props.user.uid} />\n    } else {\n        return (<div className=\"col bg-light m-0 align-middle text-center d-flex p-0\" id={\"player-\"+props.user.uid} title={\"UID \"+props.user.uid}>\n                    <div className=\"align-self-center mx-auto text-muted font-weight-bold\" title={\"UID \"+props.user.uid}><span className=\"material-icons\">graphic_eq</span>{t('voice_call.audio_call')}</div>\n               </div>)\n\n    }\n}\n\nexport default MediaStream;","import React, { useEffect, useState, useReducer, useRef, useBoolean } from \"react\";\nimport axios from \"axios\";\nimport {useTranslation} from 'react-i18next';\nimport useInterval from \"../lib/useInterval\";\nimport AgoraRTC from \"agora-rtc-sdk-ng\"\nimport MediaStream from \"./parts/MediaStream\";\n\nconst client = AgoraRTC.createClient({ mode: \"rtc\", codec: \"vp8\" });\n\nfunction reducer(state, action) {\n    switch (action.type) {\n\n        case 'update': {\n            return { ...state, ...action.value }\n        }\n\n        case 'user_published': {\n\n            if (typeof state.remoteUsers[action.user.uid] == 'undefined') {\n                var obj =  {'user' : action.user, video: (action.media == 'video'), audio: (action.media == 'audio'), media : [action.media]};\n                state.remoteUsers[action.user.uid] = obj;\n            } else {\n                if (action.media == 'audio') {\n                    state.remoteUsers[action.user.uid].audio = true;\n                } else if (action.media == 'video') {\n                    state.remoteUsers[action.user.uid].video = true;\n                }\n\n                state.remoteUsers[action.user.uid].media.push(action.media);\n            }\n\n            return { ...state}\n        }\n\n        case 'user_update': {\n            if (typeof state.remoteUsers[action.user.uid] != 'undefined') {\n                if (action.media == 'audio') {\n                    state.remoteUsers[action.user.uid].audio = false;\n                } else if (action.media == 'video') {\n                    state.remoteUsers[action.user.uid].video = false;\n                }\n                state.remoteUsers[action.user.uid];\n            }\n            return { ...state}\n        }\n\n        case 'user_unpublished': {\n            delete state.remoteUsers[action.user.uid];\n            return { ...state}\n        }\n\n        default:\n            throw new Error('Unknown action!');\n    }\n}\n\nconst VoiceCall = props => {\n\n    const [state, dispatch] = useReducer(reducer, {\n        call : {},\n        localTracks : {\n            videoTrack : null,\n            audioTrack: null\n        },\n        hasAudio: false,\n        hasVideo: false,\n        screenShare: false,\n        remoteUsers : {},\n        uid : null,\n        inCall: false,\n        pendingJoin: false,\n        type: \"\",\n        isMuted : false\n    });\n\n    const STATUS_OP_PENDING = 0;\n    const STATUS_OP_JOINED = 1;\n\n    const STATUS_VI_PENDING = 0;\n    const STATUS_VI_REQUESTED = 1;\n    const STATUS_VI_JOINED = 2;\n\n    const STATUS_PENDING = 0;\n    const STATUS_CONFIRM = 1;\n    const STATUS_CONFIRMED = 2;\n\n    const chatsRef = useRef(state);\n\n    useEffect(\n        () => { chatsRef.current = state },\n        [state]\n    )\n\n    useEffect(() => {\n\n        updateUI();\n\n        AgoraRTC.getDevices()\n            .then(devices => {\n\n                const audioDevices = devices.filter(function(device){\n                    return device.kind === \"audioinput\";\n                });\n\n                const videoDevices = devices.filter(function(device){\n                    return device.kind === \"videoinput\";\n                });\n\n                dispatch({\n                    type: 'update',\n                    value: {\n                        \"hasAudio\" : (audioDevices.length > 0),\n                        \"hasVideo\" : (videoDevices.length > 0)\n                    }\n                });\n            });\n    },[]);\n\n    const { t, i18n } = useTranslation('voice_call');\n\n    const requestJoin = (type) => {\n\n        var url = null;\n\n        if (props.isVisitor === true) {\n            url = WWW_DIR_JAVASCRIPT  + \"voicevideo/join/\" + props.initParams.id + '/' + props.initParams.hash + '/(action)/request';\n        } else {\n            url = WWW_DIR_JAVASCRIPT  + \"voicevideo/joinop/\" + props.initParams.id + '/(action)/join';\n        }\n\n        axios.post(url, {\n            \"type\" : type\n        }).then(result => {\n            dispatch({\n                type: 'update',\n                value: {\n                    \"call\" : result.data,\n                    \"type\" : type,\n                    \"pendingJoin\" : true\n                }\n            });\n        });\n    }\n\n    const cancelJoin = async (type) => {\n\n        var url = null;\n\n        if (props.isVisitor === true) {\n            url = WWW_DIR_JAVASCRIPT  + \"voicevideo/join/\" + props.initParams.id + '/' + props.initParams.hash + '/(action)/' + type;\n        } else {\n            url = WWW_DIR_JAVASCRIPT  + \"voicevideo/joinop/\" + props.initParams.id + '/' + '/(action)/' + type;\n        }\n\n        axios.get(url).then(result => {\n            dispatch({\n                type: 'update',\n                value: {\n                    \"call\" : result.data\n                }\n            });\n        });\n\n        if (type == 'leave' || type == 'end' || type == 'cancel')\n        {\n\n            Object.keys(state.localTracks).forEach(trackName => {\n                var track = state.localTracks[trackName];\n                if (track) {\n                    track.stop();\n                    track.close();\n                    state.localTracks[trackName] = undefined;\n                }\n            })\n\n            dispatch({\n                type: 'update',\n                value: {\n                    \"remoteUsers\" : {},\n                    \"uid\": null,\n                    \"inCall\": false,\n                    \"localTracks\" : {\n                        videoTrack : null,\n                        audioTrack: null\n                    }\n                }\n            });\n\n            // leave the channel\n           await client.leave();\n        }\n    }\n\n    const muteMicrophone = () => {\n        if (state.localTracks.audioTrack !== null) {\n            state.localTracks.audioTrack.setEnabled(state.isMuted);\n            dispatch({\n                type: 'update',\n                value: {\n                    \"isMuted\" : !state.isMuted\n                }\n            });\n        }\n    }\n\n    const updateUI = () => {\n        var url = null;\n\n        if (props.isVisitor === true) {\n            url = WWW_DIR_JAVASCRIPT + \"voicevideo/join/\" + props.initParams.id + '/' + props.initParams.hash;\n        } else {\n            url = WWW_DIR_JAVASCRIPT  + \"voicevideo/joinop/\" + props.initParams.id;\n        }\n\n        axios.get(url).then(result => {\n            dispatch({\n                type: 'update',\n                value: {\n                    \"call\" : result.data\n                }\n            });\n        });\n    }\n\n    useInterval(\n        () => {\n            updateUI()\n        },\n        (state.call.status != STATUS_CONFIRMED || state.call.vi_status != STATUS_VI_JOINED || state.call.op_status != STATUS_OP_JOINED) ? 2000 : null\n    );\n\n    const subscribe = async (user, mediaType) => {\n\n        const uid = user.uid;\n\n        // subscribe to a remote user\n        await client.subscribe(user, mediaType);\n\n        dispatch({\n            type: 'user_published',\n            media: mediaType,\n            user: user\n        });\n\n        if (mediaType === 'audio') {\n            user.audioTrack.play();\n        }\n    }\n\n    const handleUserPublished = (user, mediaType) =>  {\n        subscribe(user, mediaType);\n    }\n\n    const handleUserLeft = (user) => {\n        dispatch({\n            type: 'user_unpublished',\n            user: user\n        });\n        updateUI();\n    }\n\n    const handleUserUnpublished = (user, mediaType) => {\n        dispatch({\n            type: 'user_update',\n            media: mediaType,\n            user: user\n        });\n    }\n\n    // Auto join leave for an operator\n    useEffect(() => {\n        if (props.isVisitor === true && state.pendingJoin == true) {\n            if (state.call.vi_status === STATUS_VI_JOINED) {\n                join(state.call);\n            } else if (state.inCall === true && state.call.vi_status !== STATUS_VI_JOINED) {\n                cancelJoin('cancel');\n            }\n        }\n    },[state.call.vi_status, state.pendingJoin]);\n\n    // Auto join for the operator\n    useEffect(() => {\n        if (state.call.op_status === STATUS_OP_JOINED && props.isVisitor === false && state.inCall === false && state.pendingJoin == true) {\n            join(state.call);\n        }\n    },[state.call.op_status, state.pendingJoin]);\n\n    const screenShare = async () => {\n\n        if (state.screenShare == true) {\n\n            let localTracks = state.localTracks;\n\n            if (localTracks.videoTrack) {\n                await client.unpublish(localTracks.videoTrack);\n                localTracks.videoTrack.stop();\n                localTracks.videoTrack.close();\n            }\n\n            localTracks.videoTrack = null;\n\n            dispatch({\n                type: 'update',\n                value: {\n                    \"inCall\": true,\n                    \"screenShare\": false,\n                    \"localTracks\" : localTracks\n                }\n            });\n\n            // Add camera back if it was required\n            if (state.type == \"audiovideo\") {\n                addCamera();\n            }\n\n            return ;\n        }\n\n        try {\n            const screenTrack = await AgoraRTC.createScreenVideoTrack(  );\n\n            let localTracks = state.localTracks;\n\n            if (state.localTracks.videoTrack) {\n                await client.unpublish(state.localTracks.videoTrack);\n                state.localTracks.videoTrack.stop();\n                state.localTracks.videoTrack.close();\n            }\n\n            localTracks.videoTrack = screenTrack;\n            localTracks.videoTrack.play(\"local-player\");\n\n            dispatch({\n                type: 'update',\n                value: {\n                    \"inCall\": true,\n                    \"screenShare\": true,\n                    \"localTracks\" : localTracks,\n                }\n            });\n\n            await client.publish(screenTrack);\n\n        } catch (e) {\n            alert('Screen could not be shared!');\n        }\n    }\n\n    const addCamera = async () => {\n\n        if (state.localTracks.videoTrack && state.localTracks.videoTrack !== null) {\n\n            let localTracks = state.localTracks;\n\n            if (localTracks.videoTrack) {\n                await client.unpublish(localTracks.videoTrack);\n                localTracks.videoTrack.stop();\n                localTracks.videoTrack.close();\n            }\n\n            localTracks.videoTrack = null;\n\n            dispatch({\n                type: 'update',\n                value: {\n                    \"inCall\": true,\n                    \"type\": \"audio\",\n                    \"localTracks\" : localTracks\n                }\n            });\n\n            return ;\n\n        } else {\n\n            const videoTrack = await AgoraRTC.createCameraVideoTrack();\n\n            let localTracks = state.localTracks;\n\n            localTracks.videoTrack = videoTrack;\n            localTracks.videoTrack.play(\"local-player\");\n\n            dispatch({\n                type: 'update',\n                value: {\n                    \"inCall\": true,\n                    \"type\": \"audiovideo\",\n                    \"localTracks\" : localTracks,\n                }\n            });\n\n            await client.publish(videoTrack);\n        }\n\n    }\n\n    const tokenWillExpire = () => {\n\n        var url = null;\n\n        if (props.isVisitor === true) {\n            url = WWW_DIR_JAVASCRIPT  + \"voicevideo/join/\" + props.initParams.id + '/' + props.initParams.hash + '/(action)/token';\n        } else {\n            url = WWW_DIR_JAVASCRIPT  + \"voicevideo/joinop/\" + props.initParams.id + '/' + '/(action)/token';\n        }\n\n        axios.get(url).then( result => {\n            dispatch({\n                type: 'update',\n                value: {\n                    \"call\" : result.data\n                }\n            });\n\n            client.renewToken(result.data.token);\n        });\n\n    }\n\n    const join = async (data) => {\n\n        if (state.inCall === true || (props.isVisitor === true && data.vi_status != STATUS_VI_JOINED) ) {\n            return;\n        }\n\n        // add event listener to play remote tracks when remote user publishs.\n        client.on(\"user-published\", handleUserPublished);\n        client.on(\"user-unpublished\", handleUserUnpublished);\n        client.on(\"user-left\", handleUserLeft);\n        client.on(\"token-privilege-will-expire\", tokenWillExpire);\n\n        var uui = await client.join(props.initParams.appid, props.initParams.id + '_' + props.initParams.hash, data.token || null);\n        var localTracks = {\n            audioTrack : await AgoraRTC.createMicrophoneAudioTrack()\n        };\n\n        if (state.type == \"audiovideo\" || (props.isVisitor == true && state.call.video == 1)) {\n            localTracks.videoTrack = await AgoraRTC.createCameraVideoTrack();\n            localTracks.videoTrack.play(\"local-player\");\n        }\n\n        dispatch({\n            type: 'update',\n            value: {\n                \"uid\" : uui,\n                \"inCall\": true,\n                \"localTracks\" : localTracks,\n            }\n        });\n\n        await client.publish(Object.values(localTracks));\n    }\n\n    return (\n        <React.Fragment>\n            <div className=\"d-flex flex-md-row flex-column flex-grow-1 pt-0\">\n                <div className=\"col bg-light m-0 align-middle text-center d-flex p-0\" title={\"UID \"+state.uid} id=\"local-player\">\n                    {props.isVisitor == true && state.call.vi_status == STATUS_VI_REQUESTED && <div className=\"align-self-center mx-auto text-muted font-weight-bold\">{t('voice_call.wait_join_long')}</div>}\n                    {state.localTracks.videoTrack == null && state.inCall == true && <div className=\"align-self-center mx-auto text-muted font-weight-bold\"><span className=\"material-icons\">graphic_eq</span>{t('voice_call.me_audio')}</div>}\n                </div>\n                {state.inCall == true && Object.keys(state.remoteUsers).map((val, k) => {\n                    return (<MediaStream user={state.remoteUsers[val].user} key={\"media_\" + (state.remoteUsers[val].user.uid) + '_' + state.remoteUsers[val].media.join('_')} audio={state.remoteUsers[val].audio} video={state.remoteUsers[val].video} media={state.remoteUsers[val].media} />)\n                })}\n            </div>\n            <div className=\"row border-top\">\n\n                <div className=\"btn-toolbar p-2 text-center mx-auto btn-toolbar\" role=\"toolbar\" >\n\n                    <div className=\"p-2 text-center mx-auto btn-group\" role=\"group\">\n                        {props.isVisitor == true && state.call.vi_status == STATUS_VI_REQUESTED && <span className=\"text-muted py-2\">{t('voice_call.wait_let_in')} </span>}\n                        {props.isVisitor == true && (state.call.vi_status == STATUS_VI_PENDING || state.pendingJoin === false) && <span className=\"text-muted py-2\">{t('voice_call.join_to_start')} </span>}\n\n                        {props.isVisitor == false && state.call.vi_status == STATUS_VI_JOINED && <span className=\"text-muted py-2\">{t('voice_call.visitor_joined')}</span>}\n                        {props.isVisitor == false && state.call.vi_status == STATUS_VI_PENDING && <span className=\"text-muted py-2\">{t('voice_call.pending_visitor_join')}</span>}\n                        {props.isVisitor == false && state.call.vi_status == STATUS_VI_REQUESTED && <span className=\"text-muted py-2\">{t('voice_call.visitor_waiting_in')}</span>}\n                    </div>\n\n                    <div className=\"p-2 text-center mx-auto btn-group\" role=\"group\">\n                        {props.isVisitor == false && state.call.token != '' && state.call.vi_status == STATUS_VI_REQUESTED && <button className=\"btn btn-sm btn-outline-primary\" onClick={() => cancelJoin('letvisitorin')} ><span className=\"material-icons\">face</span>{t('voice_call.let_visitor_in')}</button>}\n\n                        {props.isVisitor == false && state.inCall == true && <React.Fragment>\n                            <button title={t('voice_call.leave_a_call')} className=\"btn btn-sm btn-outline-secondary\" onClick={() => cancelJoin('leave')}><span className=\"material-icons\">exit_to_app</span>{t('voice_call.leave_call_op')}</button>\n                            <button title={t('voice_call.end_call_op')} className=\"btn btn-sm btn-outline-secondary\" onClick={() => cancelJoin('end')}><span className=\"material-icons\">call_end</span>{t('voice_call.end_call_button')}</button>\n                            <button title={state.isMuted == true ? t('voice_call.unmute_mic') : t('voice_call.mute_mic')} className=\"btn btn-sm btn-outline-secondary\" onClick={() => muteMicrophone()} ><span className=\"material-icons mr-0\">{state.isMuted == true ? 'mic_off' : 'mic'}</span></button>\n                            {props.initParams.options.video == true && state.hasVideo === true && <button className=\"btn btn-sm btn-outline-secondary\" disabled={state.screenShare} onClick={() => addCamera()} title={state.type == \"audio\" ? t('voice_call.share_video') : t('voice_call.stop_sharing_video') }><span className=\"material-icons mr-0\">{(state.type == \"audio\" || state.screenShare == true) ? 'videocam_off' : 'videocam'}</span></button>}\n                            {props.initParams.options.screenshare == true && <button className=\"btn btn-sm btn-outline-secondary\" onClick={() => screenShare()} title={state.screenShare == true ? t('voice_call.stop_share_screen') : t('voice_call.share_your_screen')}><span className=\"material-icons mr-0\">{state.screenShare == true ? 'stop_screen_share' : 'screen_share'}</span></button>}\n                        </React.Fragment>}\n\n                        {((props.isVisitor == false && state.call.op_status == STATUS_OP_PENDING) || (props.isVisitor == true && state.call.vi_status == STATUS_VI_PENDING) || state.pendingJoin == false) && <React.Fragment>\n                            {state.hasAudio === true && <button className=\"btn btn-sm btn-outline-secondary\" onClick={() => requestJoin('audio')}><span className=\"material-icons\">call</span>{t('voice_call.join_with_audio')}</button>}\n                            {props.initParams.options.video == true && state.hasVideo === true && <button className=\"btn btn-sm btn-outline-secondary\" onClick={() => requestJoin('audiovideo')}><span className=\"material-icons\">video_call</span>{t('voice_call.join_with_audio_video')}</button>}\n                        </React.Fragment>}\n\n                        {props.isVisitor == true && state.inCall == true && <React.Fragment>\n                            <button className=\"btn btn-outline-primary btn-sm\" onClick={() => cancelJoin('cancel')} ><span className=\"material-icons\">call_end</span>{t('voice_call.leave_room')}</button>\n                            <button title={state.isMuted == true ? t('voice_call.unmute_mic') : t('voice_call.mute_mic')} className=\"btn btn-outline-secondary btn-sm\" onClick={() => muteMicrophone()} ><span className=\"material-icons mr-0\">{state.isMuted == true ? 'mic_off' : 'mic'}</span></button>\n                            {props.initParams.options.video == true && state.hasVideo === true && <button disabled={state.screenShare} className=\"btn btn-outline-secondary btn-sm\" onClick={() => addCamera()} title={state.type == \"audio\" ? t('voice_call.share_video') : t('voice_call.stop_sharing_video')} ><span className=\"material-icons mr-0\">{(state.type == \"audio\" || state.screenShare == true) ? 'videocam_off' : 'videocam'}</span></button>}\n                            {props.initParams.options.screenshare == true && <button className=\"btn btn-outline-secondary btn-sm\" onClick={() => screenShare()} title={state.screenShare == true ? t('voice_call.stop_share_screen') : t('voice_call.share_your_screen')}><span className=\"material-icons mr-0\">{state.screenShare == true ? 'stop_screen_share' : 'screen_share'}</span></button>}\n                        </React.Fragment>}\n\n                        {props.isVisitor == true && state.pendingJoin === true && state.call.vi_status == STATUS_VI_REQUESTED && <button className=\"btn btn-outline-primary btn-sm\" onClick={() => cancelJoin('cancel')} >{t('voice_call.cancel_join')}</button>}\n\n                    </div>\n\n                </div>\n\n            </div>\n        </React.Fragment>\n    );\n}\n\nexport default VoiceCall"],"sourceRoot":""}